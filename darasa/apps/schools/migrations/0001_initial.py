# Generated by Django 3.0.8 on 2020-11-25 13:19

import apps.schools.models
import apps.schools.utils
import ckeditor.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields
import sorl.thumbnail.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Classroom',
            fields=[
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('room_id', models.IntegerField(default=apps.schools.models.Classroom.get_room_id, help_text='The room number which need to be unique.', unique=True, verbose_name='room number')),
                ('welcome_message', models.CharField(blank=True, help_text='Message which displayed on the chat window.', max_length=200, verbose_name='welcome message')),
                ('logout_url', models.URLField(default='http://localhost:4200', help_text='URL to which users will be redirected.', verbose_name='logout URL')),
                ('moderator_password', models.CharField(default=apps.schools.utils.get_random_password, max_length=120, verbose_name='moderator password')),
                ('attendee_password', models.CharField(default=apps.schools.utils.get_random_password, max_length=120, verbose_name='attendee password')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=256, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('cover', sorl.thumbnail.fields.ImageField(default='covers/default/cover.png', upload_to='covers/%Y/%m', verbose_name='cover image')),
                ('classroom_join_mode', models.CharField(choices=[('join_all', 'Join all clasrooms in this course'), ('choose_to_join', 'Choose to join a classroom')], default='join_all', max_length=32, verbose_name='classroom join mode')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('notes', models.FileField(blank=True, null=True, upload_to='notes/%Y/%m')),
                ('position', models.IntegerField(default=0, verbose_name='position')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Level',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('category', models.CharField(choices=[('faq', 'Frequently Asked Questions (FAQ)'), ('announcement', 'Announcements')], default='announcement', max_length=32, verbose_name='category')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('accepted', 'Accepted'), ('declined', 'Declined'), ('pending', 'Pending')], default='pending', max_length=16)),
            ],
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=256)),
                ('moto', models.CharField(blank=True, max_length=256)),
                ('logo', sorl.thumbnail.fields.ImageField(default='logos/default/logo.png', upload_to='logos/%Y/%m')),
                ('primary_color', models.CharField(blank=True, max_length=10, verbose_name='primary color')),
                ('secondary_color', models.CharField(blank=True, max_length=10, verbose_name='secondary color')),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None, verbose_name='phone number')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='email address')),
                ('support_email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='support email address')),
                ('about', ckeditor.fields.RichTextField(blank=True)),
                ('terms_and_privacy', ckeditor.fields.RichTextField(blank=True)),
                ('footer_text', models.CharField(blank=True, max_length=256)),
                ('enroll_mode', models.CharField(choices=[('enroll_all', "Enroll to all courses per student's level"), ('choose_to_enroll', 'Choose to enroll to a course')], default='enroll_all', max_length=32, verbose_name='course enroll mode')),
                ('allow_teacher_verification', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='student', serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StudentAttendance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('joined_at', models.DateTimeField(blank=True, null=True)),
                ('left_at', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='teacher', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('bio', models.TextField(blank=True)),
                ('verified', models.BooleanField(default=False)),
                ('verification_file', models.FileField(blank=True, null=True, upload_to='verifications/%Y/%m')),
                ('school', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='schools.School')),
            ],
        ),
    ]
